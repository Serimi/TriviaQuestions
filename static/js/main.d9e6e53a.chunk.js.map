{"version":3,"sources":["components/Questionaire.jsx","components/App.jsx","index.js"],"names":["Questionaire","currentIndex","questions","clicked","answer","showAnswers","handleAnswer","handleNextQuestion","data","question","correct_answer","answers","className","length","dangerouslySetInnerHTML","__html","map","idx","idColor","wcolor","onClick","App","useState","setQuestions","setCurrentIndex","score","setScore","setShowAnswers","setClicked","useEffect","fetch","then","res","json","results","incorrect_answers","sort","Math","random","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMA8DeA,EA5DM,SAAC,GASf,IARLC,EAQI,EARJA,aACAC,EAOI,EAPJA,UAEAC,GAKI,EANJC,OAMI,EALJD,SACAE,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,mBAEI,IADJC,KAAQC,EACJ,EADIA,SAAUC,EACd,EADcA,eAAgBC,EAC9B,EAD8BA,QAElC,OACE,sBAAKC,UAAU,YAAf,UACE,wBAAQA,UAAU,eAAlB,kBACA,qBAAKA,UAAU,SAAf,SACE,8BACE,sBAAKA,UAAU,YAAf,UACE,2CACYX,EAAe,EAD3B,IAC+BC,EAAUW,UAEzC,qBACED,UAAU,QACVE,wBAAyB,CAAEC,OAAQN,KAErC,sBAAKG,UAAU,gCAAf,UACGD,EAAQK,KAAI,SAACZ,EAAQa,GACpB,IAAMC,EAAUb,GACZD,IAAWD,EACT,WAEF,IAEEgB,EAASd,EACXD,IAAWM,EACT,WACA,SACF,IAEJ,OACE,qBAEEE,UAAS,UAAKO,GAAL,OAAcD,EAAd,UACTE,QAAS,kBAAMd,EAAaF,IAC5BU,wBAAyB,CAAEC,OAAQX,IAH9Ba,MAOVZ,GACC,qBAAKe,QAASb,EAAoBK,UAAU,OAA5C,qCAQV,2EC0BSS,MA5Ef,WACE,MAAkCC,mBAAS,IAA3C,mBAAOpB,EAAP,KAAkBqB,EAAlB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOrB,EAAP,KAAqBuB,EAArB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOjB,EAAP,KAAoBsB,EAApB,KACA,EAA8BL,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgByB,EAAhB,KAsCA,OApCAC,qBAAU,WACRC,MAVF,kFAWKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACvB,GACL,IAAMN,EAAYM,EAAK0B,QAAQlB,KAAI,SAACP,GAAD,mBAAC,eAC/BA,GAD8B,IAEjCE,QAAS,CACPF,EAASC,gBADF,mBAEJD,EAAS0B,oBACZC,MAAK,kBAAMC,KAAKC,SAAW,WAE/Bf,EAAarB,QAEhB,IAuBIA,EAAUW,OAAS,EACxB,8BACGZ,GAAgBC,EAAUW,OACzB,sBAAKD,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,2BACgB,uBACba,EAFH,WAEkBvB,EAAUW,UAE5B,qBAAKO,QAZb,WACEmB,OAAOC,SAASC,QAAO,IAWU7B,UAAU,yBAArC,wBAGA,0EAGF,cAAC,EAAD,CACEJ,KAAMN,EAAUD,GAChBI,YAAaA,EACbC,aAtCa,SAACF,GACfC,IACCD,IAAWF,EAAUD,GAAcS,gBACrCgB,EAASD,EAAQ,GAEnBG,EAAWxB,IAGbuB,GAAe,IA+BTpB,mBA5BmB,WACzBoB,GAAe,GAEfH,EAAgBvB,EAAe,IA0BzBE,QAASA,EACTD,UAAWA,EACXD,aAAcA,MAKpB,sBAAKW,UAAU,OAAf,UACE,wBAAQA,UAAU,eAAlB,qBACA,qBAAKA,UAAU,eCzErB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9e6e53a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Questionaire = ({\r\n  currentIndex,\r\n  questions,\r\n  answer,\r\n  clicked,\r\n  showAnswers,\r\n  handleAnswer,\r\n  handleNextQuestion,\r\n  data: { question, correct_answer, answers },\r\n}) => {\r\n  return (\r\n    <div className=\"flex-body\">\r\n      <header className=\"unselectable\">Quiz</header>\r\n      <div className=\"middle\">\r\n        <div>\r\n          <div className=\"container\">\r\n            <h4>\r\n              Question {currentIndex + 1}/{questions.length}\r\n            </h4>\r\n            <div\r\n              className=\"quest\"\r\n              dangerouslySetInnerHTML={{ __html: question }}\r\n            ></div>\r\n            <div className=\"answersContainer unselectable\">\r\n              {answers.map((answer, idx) => {\r\n                const idColor = showAnswers\r\n                  ? answer === clicked\r\n                    ? \"clicked \"\r\n                    : \" \"\r\n                  : \" \";\r\n\r\n                const wcolor = showAnswers\r\n                  ? answer === correct_answer\r\n                    ? \"correct \"\r\n                    : \"wrong \"\r\n                  : \" \";\r\n\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    className={`${wcolor}${idColor}answer`}\r\n                    onClick={() => handleAnswer(answer)}\r\n                    dangerouslySetInnerHTML={{ __html: answer }}\r\n                  ></div>\r\n                );\r\n              })}\r\n              {showAnswers && (\r\n                <div onClick={handleNextQuestion} className=\"next\">\r\n                  Next Question\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <footer>Krasimir Trendafiloff • 2021</footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questionaire;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../components/background.css\";\r\nimport { Questionaire } from \"../components\";\r\n\r\nconst API_URL =\r\n  \"https://opentdb.com/api.php?amount=5&category=15&difficulty=easy&type=multiple\";\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showAnswers, setShowAnswers] = useState(false);\r\n  const [clicked, setClicked] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const questions = data.results.map((question) => ({\r\n          ...question,\r\n          answers: [\r\n            question.correct_answer,\r\n            ...question.incorrect_answers,\r\n          ].sort(() => Math.random() - 0.5),\r\n        }));\r\n        setQuestions(questions);\r\n      });\r\n  }, []);\r\n\r\n  const handleAnswer = (answer) => {\r\n    if (!showAnswers) {\r\n      if (answer === questions[currentIndex].correct_answer) {\r\n        setScore(score + 1);\r\n      }\r\n      setClicked(answer);\r\n    }\r\n\r\n    setShowAnswers(true);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setShowAnswers(false);\r\n\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return questions.length > 0 ? (\r\n    <div>\r\n      {currentIndex >= questions.length ? (\r\n        <div className=\"flex-body\">\r\n          <div className=\"gameEnd\">\r\n            Your score is <br></br>\r\n            {score} out of {questions.length}\r\n          </div>\r\n          <div onClick={refreshPage} className=\"playAgain unselectable\">\r\n            Play Again\r\n          </div>\r\n          <footer>Krasimir Trendafiloff • 2021</footer>\r\n        </div>\r\n      ) : (\r\n        <Questionaire\r\n          data={questions[currentIndex]}\r\n          showAnswers={showAnswers}\r\n          handleAnswer={handleAnswer}\r\n          handleNextQuestion={handleNextQuestion}\r\n          clicked={clicked}\r\n          questions={questions}\r\n          currentIndex={currentIndex}\r\n        />\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div className=\"body\">\r\n      <header className=\"unselectable\">Loading</header>\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./components/App.jsx\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}